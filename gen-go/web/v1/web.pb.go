// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/census-instrumentation/opencensus-proto/src/opencensus/proto/web/v1/web.proto

package v1 // import "github.com/census-instrumentation/opencensus-proto/gen-go/web/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _struct "github.com/golang/protobuf/ptypes/struct"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Type of span. Can be used to specify additional relationships between
// spans in addition to a parent/child relationship.
type Interaction_Span_SpanKind int32

const (
	// Unspecified.
	Interaction_Span_SPAN_KIND_UNSPECIFIED Interaction_Span_SpanKind = 0
	// Indicates that the span covers server-side handling of an RPC or other
	// remote network request.
	Interaction_Span_SERVER Interaction_Span_SpanKind = 1
	// Indicates that the span covers the client-side wrapper around an RPC or
	// other remote request.
	// These will be joined with browser performance data.
	Interaction_Span_CLIENT Interaction_Span_SpanKind = 2
)

var Interaction_Span_SpanKind_name = map[int32]string{
	0: "SPAN_KIND_UNSPECIFIED",
	1: "SERVER",
	2: "CLIENT",
}
var Interaction_Span_SpanKind_value = map[string]int32{
	"SPAN_KIND_UNSPECIFIED": 0,
	"SERVER":                1,
	"CLIENT":                2,
}

func (x Interaction_Span_SpanKind) String() string {
	return proto.EnumName(Interaction_Span_SpanKind_name, int32(x))
}
func (Interaction_Span_SpanKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 0}
}

// Indicates whether the message was sent or received.
type Interaction_Span_MessageEvent_Type int32

const (
	// Unknown event type.
	Interaction_Span_MessageEvent_TYPE_UNSPECIFIED Interaction_Span_MessageEvent_Type = 0
	// Indicates a sent message.
	Interaction_Span_MessageEvent_SENT Interaction_Span_MessageEvent_Type = 1
	// Indicates a received message.
	Interaction_Span_MessageEvent_RECEIVED Interaction_Span_MessageEvent_Type = 2
)

var Interaction_Span_MessageEvent_Type_name = map[int32]string{
	0: "TYPE_UNSPECIFIED",
	1: "SENT",
	2: "RECEIVED",
}
var Interaction_Span_MessageEvent_Type_value = map[string]int32{
	"TYPE_UNSPECIFIED": 0,
	"SENT":             1,
	"RECEIVED":         2,
}

func (x Interaction_Span_MessageEvent_Type) String() string {
	return proto.EnumName(Interaction_Span_MessageEvent_Type_name, int32(x))
}
func (Interaction_Span_MessageEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 2, 0}
}

// The relationship of the current span relative to the linked span:
// child, parent, or unspecified.
type Interaction_Span_Link_Type int32

const (
	// The relationship of the two spans is unknown, or known but other
	// than parent-child.
	Interaction_Span_Link_UNSPECIFIED Interaction_Span_Link_Type = 0
	// The linked span is a child of the current span.
	Interaction_Span_Link_CHILD_LINKED_SPAN Interaction_Span_Link_Type = 1
	// The linked span is a parent of the current span.
	Interaction_Span_Link_PARENT_LINKED_SPAN Interaction_Span_Link_Type = 2
)

var Interaction_Span_Link_Type_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "CHILD_LINKED_SPAN",
	2: "PARENT_LINKED_SPAN",
}
var Interaction_Span_Link_Type_value = map[string]int32{
	"UNSPECIFIED":        0,
	"CHILD_LINKED_SPAN":  1,
	"PARENT_LINKED_SPAN": 2,
}

func (x Interaction_Span_Link_Type) String() string {
	return proto.EnumName(Interaction_Span_Link_Type_name, int32(x))
}
func (Interaction_Span_Link_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 3, 0}
}

// A measurable user interaction within a web browser client. This could be an
// initial page load, a route transition within a single page application, or an
// on-page user interaction such as clicking a button. This proto contains all
// the information needed for the web interaction interceptor to generate spans
// and metrics related to the interaction.
type Interaction struct {
	// The trace ID for the user interaction. All spans within an interaction are
	// part of the same trace. The ID is a 16-byte array encoded in hexadecimal.
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// The time origin of the performance clock in the browser session that
	// collected this interaction, measured as milliseconds since the epoch.
	// See https://www.w3.org/TR/hr-time/
	TimeOrigin float64 `protobuf:"fixed64,2,opt,name=time_origin,json=timeOrigin,proto3" json:"time_origin,omitempty"`
	// The time in milliseconds since the epoch that the frontend web server
	// received the request to render the initial template for the web UI. This
	// time is measured by the server's clock and is used to adjust for clock skew
	// between the client and server. This should be sent from the web server to
	// client as a value in a <script> tag in the rendered HTML. A value of 0
	// indicates that it is missing.
	ServerRequestStart float64 `protobuf:"fixed64,3,opt,name=server_request_start,json=serverRequestStart,proto3" json:"server_request_start,omitempty"`
	// The time in milliseconds since the epoch that the frontend web server
	// started sending the response to render the web UI template. This is
	// measured by the server clock and is used to adjust for clock skew between
	// client and server. This should also be sent from server to client via the
	// rendered HTML, and a value of 0 indicates that it is missing.
	ServerResponseStart float64 `protobuf:"fixed64,4,opt,name=server_response_start,json=serverResponseStart,proto3" json:"server_response_start,omitempty"`
	// Web performance entries associated with the interaction.
	PerformanceEntries []*Interaction_PerformanceEntry `protobuf:"bytes,5,rep,name=performance_entries,json=performanceEntries,proto3" json:"performance_entries,omitempty"`
	Spans              []*Interaction_Span             `protobuf:"bytes,6,rep,name=spans,proto3" json:"spans,omitempty"`
	// OpenCensus web library info.
	LibraryInfo *Interaction_LibraryInfo `protobuf:"bytes,7,opt,name=library_info,json=libraryInfo,proto3" json:"library_info,omitempty"`
	// Service description for the web UI.
	ServiceInfo *Interaction_ServiceInfo `protobuf:"bytes,8,opt,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
	// Attributes associated with web client that generated the interaction. This
	// could be related to the end user (e.g. user ID, session ID) or could be
	// related to the web UI service (e.g. serving region, environment type).
	// This plays a similar role to the Node `attributes` field.
	// See
	// https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/agent/common/v1/common.proto
	ClientAttributes     map[string]string `protobuf:"bytes,9,rep,name=client_attributes,json=clientAttributes,proto3" json:"client_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Interaction) Reset()         { *m = Interaction{} }
func (m *Interaction) String() string { return proto.CompactTextString(m) }
func (*Interaction) ProtoMessage()    {}
func (*Interaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0}
}
func (m *Interaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction.Unmarshal(m, b)
}
func (m *Interaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction.Marshal(b, m, deterministic)
}
func (dst *Interaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction.Merge(dst, src)
}
func (m *Interaction) XXX_Size() int {
	return xxx_messageInfo_Interaction.Size(m)
}
func (m *Interaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction proto.InternalMessageInfo

func (m *Interaction) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *Interaction) GetTimeOrigin() float64 {
	if m != nil {
		return m.TimeOrigin
	}
	return 0
}

func (m *Interaction) GetServerRequestStart() float64 {
	if m != nil {
		return m.ServerRequestStart
	}
	return 0
}

func (m *Interaction) GetServerResponseStart() float64 {
	if m != nil {
		return m.ServerResponseStart
	}
	return 0
}

func (m *Interaction) GetPerformanceEntries() []*Interaction_PerformanceEntry {
	if m != nil {
		return m.PerformanceEntries
	}
	return nil
}

func (m *Interaction) GetSpans() []*Interaction_Span {
	if m != nil {
		return m.Spans
	}
	return nil
}

func (m *Interaction) GetLibraryInfo() *Interaction_LibraryInfo {
	if m != nil {
		return m.LibraryInfo
	}
	return nil
}

func (m *Interaction) GetServiceInfo() *Interaction_ServiceInfo {
	if m != nil {
		return m.ServiceInfo
	}
	return nil
}

func (m *Interaction) GetClientAttributes() map[string]string {
	if m != nil {
		return m.ClientAttributes
	}
	return nil
}

// Performance data from `performance.getEntries()` retrieved after this
// interaction ended. All timings are in milleconds since the browser
// navigation start. Values may be zero if the browser security policy
// does not permit reading the field, e.g. if the resource requested is
// from another domain and no matching Timing-Allow-Origin header is sent.
// See detailed specs at:
// https://www.w3.org/TR/performance-timeline-2/
// https://www.w3.org/TR/resource-timing-2/
// https://www.w3.org/TR/navigation-timing-2/
// https://www.w3.org/TR/server-timing/
//
// Sending the raw performance entries allows the JavaScript client code
// o be smaller. The OpenCensus agent web interceptor can use these entries to
// generate detailed spans.
type Interaction_PerformanceEntry struct {
	// Type of performnce entry e.g. "navigation" or "resource".
	EntryType string `protobuf:"bytes,1,opt,name=entry_type,json=entryType,proto3" json:"entry_type,omitempty"`
	// The first timestamp of the entry, e.g. for a resource timing, the time
	// right before the browser starts the fetch.
	StartTime float64 `protobuf:"fixed64,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The duration of the performance entry in milliseconds.
	Duration float64 `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// URL of the retrieved resource or page.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The type of navigation for a navigation entry.
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// The type of resource that initiated the performance event.
	InitiatorType string `protobuf:"bytes,6,opt,name=initiator_type,json=initiatorType,proto3" json:"initiator_type,omitempty"`
	// If the document has an active service worker registration, this is
	// time right before the browser ran the worker or fired the `fetch` event.
	WorkerStart float64 `protobuf:"fixed64,7,opt,name=worker_start,json=workerStart,proto3" json:"worker_start,omitempty"`
	// If there are HTTP redirects when navigating and if all are from the same
	// origin, this is the start time of the fetch that initiated the redirect.
	RedirectStart float64 `protobuf:"fixed64,8,opt,name=redirect_start,json=redirectStart,proto3" json:"redirect_start,omitempty"`
	// Number of redirects since the last non-redirect navigation.
	RedirectCount int32 `protobuf:"varint,9,opt,name=redirect_count,json=redirectCount,proto3" json:"redirect_count,omitempty"`
	// The time right after receiving the last byte of the last redirect.
	RedirectEnd float64 `protobuf:"fixed64,10,opt,name=redirect_end,json=redirectEnd,proto3" json:"redirect_end,omitempty"`
	// Time right before the browser checks caches for a resource.
	FetchStart float64 `protobuf:"fixed64,11,opt,name=fetch_start,json=fetchStart,proto3" json:"fetch_start,omitempty"`
	// Time right before the browser starts the domain name lookup.
	DomainLookupStart float64 `protobuf:"fixed64,12,opt,name=domain_lookup_start,json=domainLookupStart,proto3" json:"domain_lookup_start,omitempty"`
	// Time right after the browser finishes the domain name lookup.
	DomainLookupEnd float64 `protobuf:"fixed64,13,opt,name=domain_lookup_end,json=domainLookupEnd,proto3" json:"domain_lookup_end,omitempty"`
	// Time right before the browser starts establishing the server connection.
	// If a persistent connection is used or the resource is retrieved from
	// cache, this will match domain_lookup_end.
	ConnectStart float64 `protobuf:"fixed64,14,opt,name=connect_start,json=connectStart,proto3" json:"connect_start,omitempty"`
	// Time right before the browser starts the handshake to secure the
	// connection, or zero if a secure connection is not used.
	SecureConnectionStart float64 `protobuf:"fixed64,15,opt,name=secure_connection_start,json=secureConnectionStart,proto3" json:"secure_connection_start,omitempty"`
	// Time right after the browser finishes establishing the connection.
	// If a persistent connection is used or the resource is retrieved from
	// cache, this will match domain_lookup_end.
	ConnectEnd float64 `protobuf:"fixed64,16,opt,name=connect_end,json=connectEnd,proto3" json:"connect_end,omitempty"`
	// Network protocol used to fetch the resource by ALPN Protocol ID.
	NextHopProtocol string `protobuf:"bytes,17,opt,name=next_hop_protocol,json=nextHopProtocol,proto3" json:"next_hop_protocol,omitempty"`
	// Time right before the browser starts requesting the resource.
	RequestStart float64 `protobuf:"fixed64,18,opt,name=request_start,json=requestStart,proto3" json:"request_start,omitempty"`
	// Time right after the browser receives the first byte of the response.
	ResponseStart float64 `protobuf:"fixed64,19,opt,name=response_start,json=responseStart,proto3" json:"response_start,omitempty"`
	// Time right after the browser receives the last byte of the response.
	ResponseEnd float64 `protobuf:"fixed64,20,opt,name=response_end,json=responseEnd,proto3" json:"response_end,omitempty"`
	// Number of bytes received from a HTTP fetch from both headers and payload.
	TransferSize int64 `protobuf:"varint,21,opt,name=transfer_size,json=transferSize,proto3" json:"transfer_size,omitempty"`
	// Compressed size of the payload body in bytes.
	EncodedBodySize int64 `protobuf:"varint,22,opt,name=encoded_body_size,json=encodedBodySize,proto3" json:"encoded_body_size,omitempty"`
	// Uncompressed size of the payload body in bytes.
	DecodedBodySize int64 `protobuf:"varint,23,opt,name=decoded_body_size,json=decodedBodySize,proto3" json:"decoded_body_size,omitempty"`
	// Server timings associated with the performance entry.
	ServerTiming []*Interaction_PerformanceEntry_PerformanceServerTiming `protobuf:"bytes,24,rep,name=server_timing,json=serverTiming,proto3" json:"server_timing,omitempty"`
	// Time right before browser starts the unload event of previous document.
	// If previous document was from different origin, this is zero.
	UnloadEventStart float64 `protobuf:"fixed64,25,opt,name=unload_event_start,json=unloadEventStart,proto3" json:"unload_event_start,omitempty"`
	// Time right after browser finishes the unload event of previous document.
	// If previous document was from different origin, this is zero.
	UnloadEventEnd float64 `protobuf:"fixed64,26,opt,name=unload_event_end,json=unloadEventEnd,proto3" json:"unload_event_end,omitempty"`
	// Time right before the browser sets document readiness to "interactive".
	DomInteractive float64 `protobuf:"fixed64,27,opt,name=dom_interactive,json=domInteractive,proto3" json:"dom_interactive,omitempty"`
	// Time right before the browser fires DOMContentLoaded event.
	DomContentLoadedEventStart float64 `protobuf:"fixed64,28,opt,name=dom_content_loaded_event_start,json=domContentLoadedEventStart,proto3" json:"dom_content_loaded_event_start,omitempty"`
	// Time right after the DOMContentLoaded event completes.
	DomContentLoadedEventEnd float64 `protobuf:"fixed64,29,opt,name=dom_content_loaded_event_end,json=domContentLoadedEventEnd,proto3" json:"dom_content_loaded_event_end,omitempty"`
	// Time right before the browser sets document readiness to "complete".
	DomComplete float64 `protobuf:"fixed64,30,opt,name=dom_complete,json=domComplete,proto3" json:"dom_complete,omitempty"`
	// Time right before the load event of the current document is fired.
	LoadEventEnd float64 `protobuf:"fixed64,31,opt,name=load_event_end,json=loadEventEnd,proto3" json:"load_event_end,omitempty"`
	// Time when the load event of the current document is completed.
	LoadEventStart float64 `protobuf:"fixed64,32,opt,name=load_event_start,json=loadEventStart,proto3" json:"load_event_start,omitempty"`
	// Deprecated in Navigation Timing Level 2 Spec.
	// Time when the browser sets document readiness to "loading".
	// Due to browser differences this should not be used in meaningful metrics.
	DomLoading           float64  `protobuf:"fixed64,33,opt,name=dom_loading,json=domLoading,proto3" json:"dom_loading,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_PerformanceEntry) Reset()         { *m = Interaction_PerformanceEntry{} }
func (m *Interaction_PerformanceEntry) String() string { return proto.CompactTextString(m) }
func (*Interaction_PerformanceEntry) ProtoMessage()    {}
func (*Interaction_PerformanceEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 0}
}
func (m *Interaction_PerformanceEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_PerformanceEntry.Unmarshal(m, b)
}
func (m *Interaction_PerformanceEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_PerformanceEntry.Marshal(b, m, deterministic)
}
func (dst *Interaction_PerformanceEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_PerformanceEntry.Merge(dst, src)
}
func (m *Interaction_PerformanceEntry) XXX_Size() int {
	return xxx_messageInfo_Interaction_PerformanceEntry.Size(m)
}
func (m *Interaction_PerformanceEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_PerformanceEntry.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_PerformanceEntry proto.InternalMessageInfo

func (m *Interaction_PerformanceEntry) GetEntryType() string {
	if m != nil {
		return m.EntryType
	}
	return ""
}

func (m *Interaction_PerformanceEntry) GetStartTime() float64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interaction_PerformanceEntry) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Interaction_PerformanceEntry) GetInitiatorType() string {
	if m != nil {
		return m.InitiatorType
	}
	return ""
}

func (m *Interaction_PerformanceEntry) GetWorkerStart() float64 {
	if m != nil {
		return m.WorkerStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetRedirectStart() float64 {
	if m != nil {
		return m.RedirectStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetRedirectCount() int32 {
	if m != nil {
		return m.RedirectCount
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetRedirectEnd() float64 {
	if m != nil {
		return m.RedirectEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetFetchStart() float64 {
	if m != nil {
		return m.FetchStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomainLookupStart() float64 {
	if m != nil {
		return m.DomainLookupStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomainLookupEnd() float64 {
	if m != nil {
		return m.DomainLookupEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetConnectStart() float64 {
	if m != nil {
		return m.ConnectStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetSecureConnectionStart() float64 {
	if m != nil {
		return m.SecureConnectionStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetConnectEnd() float64 {
	if m != nil {
		return m.ConnectEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetNextHopProtocol() string {
	if m != nil {
		return m.NextHopProtocol
	}
	return ""
}

func (m *Interaction_PerformanceEntry) GetRequestStart() float64 {
	if m != nil {
		return m.RequestStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetResponseStart() float64 {
	if m != nil {
		return m.ResponseStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetResponseEnd() float64 {
	if m != nil {
		return m.ResponseEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetTransferSize() int64 {
	if m != nil {
		return m.TransferSize
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetEncodedBodySize() int64 {
	if m != nil {
		return m.EncodedBodySize
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDecodedBodySize() int64 {
	if m != nil {
		return m.DecodedBodySize
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetServerTiming() []*Interaction_PerformanceEntry_PerformanceServerTiming {
	if m != nil {
		return m.ServerTiming
	}
	return nil
}

func (m *Interaction_PerformanceEntry) GetUnloadEventStart() float64 {
	if m != nil {
		return m.UnloadEventStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetUnloadEventEnd() float64 {
	if m != nil {
		return m.UnloadEventEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomInteractive() float64 {
	if m != nil {
		return m.DomInteractive
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomContentLoadedEventStart() float64 {
	if m != nil {
		return m.DomContentLoadedEventStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomContentLoadedEventEnd() float64 {
	if m != nil {
		return m.DomContentLoadedEventEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomComplete() float64 {
	if m != nil {
		return m.DomComplete
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetLoadEventEnd() float64 {
	if m != nil {
		return m.LoadEventEnd
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetLoadEventStart() float64 {
	if m != nil {
		return m.LoadEventStart
	}
	return 0
}

func (m *Interaction_PerformanceEntry) GetDomLoading() float64 {
	if m != nil {
		return m.DomLoading
	}
	return 0
}

// Timing entries sent by the server via the Server-Timing header.
// See https://www.w3.org/TR/server-timing/
type Interaction_PerformanceEntry_PerformanceServerTiming struct {
	// Metric name sent by the server.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Metric description sent by the server.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Metric value sent by the server.
	Duration             float64  `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_PerformanceEntry_PerformanceServerTiming) Reset() {
	*m = Interaction_PerformanceEntry_PerformanceServerTiming{}
}
func (m *Interaction_PerformanceEntry_PerformanceServerTiming) String() string {
	return proto.CompactTextString(m)
}
func (*Interaction_PerformanceEntry_PerformanceServerTiming) ProtoMessage() {}
func (*Interaction_PerformanceEntry_PerformanceServerTiming) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 0, 0}
}
func (m *Interaction_PerformanceEntry_PerformanceServerTiming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming.Unmarshal(m, b)
}
func (m *Interaction_PerformanceEntry_PerformanceServerTiming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming.Marshal(b, m, deterministic)
}
func (dst *Interaction_PerformanceEntry_PerformanceServerTiming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming.Merge(dst, src)
}
func (m *Interaction_PerformanceEntry_PerformanceServerTiming) XXX_Size() int {
	return xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming.Size(m)
}
func (m *Interaction_PerformanceEntry_PerformanceServerTiming) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_PerformanceEntry_PerformanceServerTiming proto.InternalMessageInfo

func (m *Interaction_PerformanceEntry_PerformanceServerTiming) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interaction_PerformanceEntry_PerformanceServerTiming) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Interaction_PerformanceEntry_PerformanceServerTiming) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// A Span is similar to main OpenCensus Span, but is designed to be easier
// for browser JavaScript to write via HTTP-JSON that will be converted to
// the proto via jsonpb. All spans for an interaction are assumed to have the
// same trace ID, specified above (otherwise send two interactions with
// links).
// See
// https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/trace/v1/trace.proto
type Interaction_Span struct {
	// A unique identifier for a span within the interaction. It is 8-bytes
	// encoded as a hexadecimal string.
	SpanId string `protobuf:"bytes,1,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	// Information about request position in multiple distributed tracing
	// graphs. See https://github.com/w3c/distributed-tracing for details.
	Tracestate map[string]string `protobuf:"bytes,2,rep,name=tracestate,proto3" json:"tracestate,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The `span_id` of this span's parent span. If this is a root span, then
	// this field must be empty. It is 8-bytes encoded as a hexadecimal string.
	ParentSpanId string `protobuf:"bytes,3,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`
	// A description of the span's operation.
	Name string                    `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Kind Interaction_Span_SpanKind `protobuf:"varint,5,opt,name=kind,proto3,enum=opencensus.proto.web.v1.Interaction_Span_SpanKind" json:"kind,omitempty"`
	// Span start time as measured by browser performance clock (the result of
	// calling `performance.now()`). This is the number of milliseconds since
	// the browser clock timeOrigin (the start of the navigation).
	Start float64 `protobuf:"fixed64,6,opt,name=start,proto3" json:"start,omitempty"`
	// Span end time in browser performance clock milliseconds.
	End float64 `protobuf:"fixed64,7,opt,name=end,proto3" json:"end,omitempty"`
	// Attributes associated with the span. Defining this as a Struct makes it
	// easier for the JavaScript client to send attributes as normal JSON
	// values. JSON booleans, strings and numbers will be converted to the
	// trace.v1.Span.AttributeValue string_value, bool_value or double_value
	// fields respectively. To specify an int value in JSON use e.g.
	// {intValue:"2"} as the attribute value.
	Attributes *_struct.Struct `protobuf:"bytes,8,opt,name=attributes,proto3" json:"attributes,omitempty"`
	// Unparse JavaScript stack trace associated with this span. This will be
	// the value of `Error.stack`.
	StackTrace string `protobuf:"bytes,9,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	// Time stamped text annotations for events associated with the span.
	Annotations []*Interaction_Span_Annotation `protobuf:"bytes,10,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// Message events associated with the span
	MessageEvents []*Interaction_Span_MessageEvent `protobuf:"bytes,11,rep,name=message_events,json=messageEvents,proto3" json:"message_events,omitempty"`
	Links         []*Interaction_Span_Link         `protobuf:"bytes,12,rep,name=links,proto3" json:"links,omitempty"`
	Status        *Interaction_Span_Status         `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// A highly recommended but not required flag that identifies when a trace
	// crosses a process boundary. True when the parent_span belongs to the
	// same process as the current span.
	// This will typically be defaulted to true by the web interceptor.
	SameProcessAsParentSpan *wrappers.BoolValue `protobuf:"bytes,14,opt,name=same_process_as_parent_span,json=sameProcessAsParentSpan,proto3" json:"same_process_as_parent_span,omitempty"`
	// An optional number of child spans that were generated while this span
	// was active. If set, allows an implementation to detect missing child
	// spans. This will typically be computed automatically by the interceptor.
	ChildSpanCount       *wrappers.UInt32Value `protobuf:"bytes,15,opt,name=child_span_count,json=childSpanCount,proto3" json:"child_span_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Interaction_Span) Reset()         { *m = Interaction_Span{} }
func (m *Interaction_Span) String() string { return proto.CompactTextString(m) }
func (*Interaction_Span) ProtoMessage()    {}
func (*Interaction_Span) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1}
}
func (m *Interaction_Span) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_Span.Unmarshal(m, b)
}
func (m *Interaction_Span) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_Span.Marshal(b, m, deterministic)
}
func (dst *Interaction_Span) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_Span.Merge(dst, src)
}
func (m *Interaction_Span) XXX_Size() int {
	return xxx_messageInfo_Interaction_Span.Size(m)
}
func (m *Interaction_Span) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_Span.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_Span proto.InternalMessageInfo

func (m *Interaction_Span) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *Interaction_Span) GetTracestate() map[string]string {
	if m != nil {
		return m.Tracestate
	}
	return nil
}

func (m *Interaction_Span) GetParentSpanId() string {
	if m != nil {
		return m.ParentSpanId
	}
	return ""
}

func (m *Interaction_Span) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interaction_Span) GetKind() Interaction_Span_SpanKind {
	if m != nil {
		return m.Kind
	}
	return Interaction_Span_SPAN_KIND_UNSPECIFIED
}

func (m *Interaction_Span) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Interaction_Span) GetEnd() float64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Interaction_Span) GetAttributes() *_struct.Struct {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *Interaction_Span) GetStackTrace() string {
	if m != nil {
		return m.StackTrace
	}
	return ""
}

func (m *Interaction_Span) GetAnnotations() []*Interaction_Span_Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Interaction_Span) GetMessageEvents() []*Interaction_Span_MessageEvent {
	if m != nil {
		return m.MessageEvents
	}
	return nil
}

func (m *Interaction_Span) GetLinks() []*Interaction_Span_Link {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Interaction_Span) GetStatus() *Interaction_Span_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Interaction_Span) GetSameProcessAsParentSpan() *wrappers.BoolValue {
	if m != nil {
		return m.SameProcessAsParentSpan
	}
	return nil
}

func (m *Interaction_Span) GetChildSpanCount() *wrappers.UInt32Value {
	if m != nil {
		return m.ChildSpanCount
	}
	return nil
}

// A time stamped text annotation with a set of attributes.
type Interaction_Span_Annotation struct {
	// Time the event occurred in performance clock milliseconds.
	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	// Attributes for the event.
	Attributes           *_struct.Struct `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Interaction_Span_Annotation) Reset()         { *m = Interaction_Span_Annotation{} }
func (m *Interaction_Span_Annotation) String() string { return proto.CompactTextString(m) }
func (*Interaction_Span_Annotation) ProtoMessage()    {}
func (*Interaction_Span_Annotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 1}
}
func (m *Interaction_Span_Annotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_Span_Annotation.Unmarshal(m, b)
}
func (m *Interaction_Span_Annotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_Span_Annotation.Marshal(b, m, deterministic)
}
func (dst *Interaction_Span_Annotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_Span_Annotation.Merge(dst, src)
}
func (m *Interaction_Span_Annotation) XXX_Size() int {
	return xxx_messageInfo_Interaction_Span_Annotation.Size(m)
}
func (m *Interaction_Span_Annotation) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_Span_Annotation.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_Span_Annotation proto.InternalMessageInfo

func (m *Interaction_Span_Annotation) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Interaction_Span_Annotation) GetAttributes() *_struct.Struct {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// An event describing a message sent/received between Spans.
type Interaction_Span_MessageEvent struct {
	// Time the message was sent/received in performance clock milliseconds.
	Time float64 `protobuf:"fixed64,1,opt,name=time,proto3" json:"time,omitempty"`
	// MessageEvent type. Indicates whether the message was sent or received.
	Type Interaction_Span_MessageEvent_Type `protobuf:"varint,2,opt,name=type,proto3,enum=opencensus.proto.web.v1.Interaction_Span_MessageEvent_Type" json:"type,omitempty"`
	// An identifier for the MessageEvent's message that can be used to match
	// SENT and RECEIVED MessageEvents. For example, this field could
	// represent a sequence ID for a streaming RPC. It is recommended to be
	// unique within a Span.
	Id uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	// The number of uncompressed bytes sent or received.
	UncompressedSize uint64 `protobuf:"varint,4,opt,name=uncompressed_size,json=uncompressedSize,proto3" json:"uncompressed_size,omitempty"`
	// The number of compressed bytes sent or received. If zero, assumed to
	// be the same size as uncompressed.
	CompressedSize       uint64   `protobuf:"varint,5,opt,name=compressed_size,json=compressedSize,proto3" json:"compressed_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_Span_MessageEvent) Reset()         { *m = Interaction_Span_MessageEvent{} }
func (m *Interaction_Span_MessageEvent) String() string { return proto.CompactTextString(m) }
func (*Interaction_Span_MessageEvent) ProtoMessage()    {}
func (*Interaction_Span_MessageEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 2}
}
func (m *Interaction_Span_MessageEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_Span_MessageEvent.Unmarshal(m, b)
}
func (m *Interaction_Span_MessageEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_Span_MessageEvent.Marshal(b, m, deterministic)
}
func (dst *Interaction_Span_MessageEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_Span_MessageEvent.Merge(dst, src)
}
func (m *Interaction_Span_MessageEvent) XXX_Size() int {
	return xxx_messageInfo_Interaction_Span_MessageEvent.Size(m)
}
func (m *Interaction_Span_MessageEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_Span_MessageEvent.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_Span_MessageEvent proto.InternalMessageInfo

func (m *Interaction_Span_MessageEvent) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Interaction_Span_MessageEvent) GetType() Interaction_Span_MessageEvent_Type {
	if m != nil {
		return m.Type
	}
	return Interaction_Span_MessageEvent_TYPE_UNSPECIFIED
}

func (m *Interaction_Span_MessageEvent) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Interaction_Span_MessageEvent) GetUncompressedSize() uint64 {
	if m != nil {
		return m.UncompressedSize
	}
	return 0
}

func (m *Interaction_Span_MessageEvent) GetCompressedSize() uint64 {
	if m != nil {
		return m.CompressedSize
	}
	return 0
}

// A pointer from the current span to another span in the same trace or in a
// different trace. For example, this can be used in batching operations,
// where a single batch handler processes multiple requests from different
// traces or when the handler receives a request from a different project.
type Interaction_Span_Link struct {
	// Unique identifier for linked trace. It is a 16-byte hex-encoded string.
	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// Unique identifier for span within linked trace. It is a 16-byte
	// hex-encoded string.
	SpanId string                     `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	Type   Interaction_Span_Link_Type `protobuf:"varint,3,opt,name=type,proto3,enum=opencensus.proto.web.v1.Interaction_Span_Link_Type" json:"type,omitempty"`
	// Attributes about the trace link.
	Attributes           *_struct.Struct `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Interaction_Span_Link) Reset()         { *m = Interaction_Span_Link{} }
func (m *Interaction_Span_Link) String() string { return proto.CompactTextString(m) }
func (*Interaction_Span_Link) ProtoMessage()    {}
func (*Interaction_Span_Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 3}
}
func (m *Interaction_Span_Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_Span_Link.Unmarshal(m, b)
}
func (m *Interaction_Span_Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_Span_Link.Marshal(b, m, deterministic)
}
func (dst *Interaction_Span_Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_Span_Link.Merge(dst, src)
}
func (m *Interaction_Span_Link) XXX_Size() int {
	return xxx_messageInfo_Interaction_Span_Link.Size(m)
}
func (m *Interaction_Span_Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_Span_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_Span_Link proto.InternalMessageInfo

func (m *Interaction_Span_Link) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *Interaction_Span_Link) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *Interaction_Span_Link) GetType() Interaction_Span_Link_Type {
	if m != nil {
		return m.Type
	}
	return Interaction_Span_Link_UNSPECIFIED
}

func (m *Interaction_Span_Link) GetAttributes() *_struct.Struct {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs.
// This proto's fields are a subset of those of
// [google.rpc.Status](https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto),
// which is used by [gRPC](https://github.com/grpc).
type Interaction_Span_Status struct {
	// The HTTP status code associated with the span.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// A developer-facing error message, which should be in English.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_Span_Status) Reset()         { *m = Interaction_Span_Status{} }
func (m *Interaction_Span_Status) String() string { return proto.CompactTextString(m) }
func (*Interaction_Span_Status) ProtoMessage()    {}
func (*Interaction_Span_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 1, 4}
}
func (m *Interaction_Span_Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_Span_Status.Unmarshal(m, b)
}
func (m *Interaction_Span_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_Span_Status.Marshal(b, m, deterministic)
}
func (dst *Interaction_Span_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_Span_Status.Merge(dst, src)
}
func (m *Interaction_Span_Status) XXX_Size() int {
	return xxx_messageInfo_Interaction_Span_Status.Size(m)
}
func (m *Interaction_Span_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_Span_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_Span_Status proto.InternalMessageInfo

func (m *Interaction_Span_Status) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Interaction_Span_Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Information about the OpenCensus web library that measured the interaction.
// This is a simplified version of the LibraryInfo message used to write
// server side Spans. There is no `Language` field currently as we assume the
// language writing web interaction data is browser JavaScript. See
// https://github.com/census-instrumentation/opencensus-proto/blob/master/src/opencensus/proto/agent/common/v1/common.proto
type Interaction_LibraryInfo struct {
	// The version of the OpenCensus web client library.
	LibraryVersion string `protobuf:"bytes,2,opt,name=library_version,json=libraryVersion,proto3" json:"library_version,omitempty"`
	// The version of the OpenCensus web Agent exporter library. If omitted,
	// this is assumed to be the same as `library_version`.
	ExporterVersion      string   `protobuf:"bytes,3,opt,name=exporter_version,json=exporterVersion,proto3" json:"exporter_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_LibraryInfo) Reset()         { *m = Interaction_LibraryInfo{} }
func (m *Interaction_LibraryInfo) String() string { return proto.CompactTextString(m) }
func (*Interaction_LibraryInfo) ProtoMessage()    {}
func (*Interaction_LibraryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 2}
}
func (m *Interaction_LibraryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_LibraryInfo.Unmarshal(m, b)
}
func (m *Interaction_LibraryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_LibraryInfo.Marshal(b, m, deterministic)
}
func (dst *Interaction_LibraryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_LibraryInfo.Merge(dst, src)
}
func (m *Interaction_LibraryInfo) XXX_Size() int {
	return xxx_messageInfo_Interaction_LibraryInfo.Size(m)
}
func (m *Interaction_LibraryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_LibraryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_LibraryInfo proto.InternalMessageInfo

func (m *Interaction_LibraryInfo) GetLibraryVersion() string {
	if m != nil {
		return m.LibraryVersion
	}
	return ""
}

func (m *Interaction_LibraryInfo) GetExporterVersion() string {
	if m != nil {
		return m.ExporterVersion
	}
	return ""
}

// Service description for the web UI that generated the interaction.
type Interaction_ServiceInfo struct {
	// Name of the service.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interaction_ServiceInfo) Reset()         { *m = Interaction_ServiceInfo{} }
func (m *Interaction_ServiceInfo) String() string { return proto.CompactTextString(m) }
func (*Interaction_ServiceInfo) ProtoMessage()    {}
func (*Interaction_ServiceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_web_e7f6b64c714d62fd, []int{0, 3}
}
func (m *Interaction_ServiceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interaction_ServiceInfo.Unmarshal(m, b)
}
func (m *Interaction_ServiceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interaction_ServiceInfo.Marshal(b, m, deterministic)
}
func (dst *Interaction_ServiceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interaction_ServiceInfo.Merge(dst, src)
}
func (m *Interaction_ServiceInfo) XXX_Size() int {
	return xxx_messageInfo_Interaction_ServiceInfo.Size(m)
}
func (m *Interaction_ServiceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Interaction_ServiceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Interaction_ServiceInfo proto.InternalMessageInfo

func (m *Interaction_ServiceInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Interaction)(nil), "opencensus.proto.web.v1.Interaction")
	proto.RegisterMapType((map[string]string)(nil), "opencensus.proto.web.v1.Interaction.ClientAttributesEntry")
	proto.RegisterType((*Interaction_PerformanceEntry)(nil), "opencensus.proto.web.v1.Interaction.PerformanceEntry")
	proto.RegisterType((*Interaction_PerformanceEntry_PerformanceServerTiming)(nil), "opencensus.proto.web.v1.Interaction.PerformanceEntry.PerformanceServerTiming")
	proto.RegisterType((*Interaction_Span)(nil), "opencensus.proto.web.v1.Interaction.Span")
	proto.RegisterMapType((map[string]string)(nil), "opencensus.proto.web.v1.Interaction.Span.TracestateEntry")
	proto.RegisterType((*Interaction_Span_Annotation)(nil), "opencensus.proto.web.v1.Interaction.Span.Annotation")
	proto.RegisterType((*Interaction_Span_MessageEvent)(nil), "opencensus.proto.web.v1.Interaction.Span.MessageEvent")
	proto.RegisterType((*Interaction_Span_Link)(nil), "opencensus.proto.web.v1.Interaction.Span.Link")
	proto.RegisterType((*Interaction_Span_Status)(nil), "opencensus.proto.web.v1.Interaction.Span.Status")
	proto.RegisterType((*Interaction_LibraryInfo)(nil), "opencensus.proto.web.v1.Interaction.LibraryInfo")
	proto.RegisterType((*Interaction_ServiceInfo)(nil), "opencensus.proto.web.v1.Interaction.ServiceInfo")
	proto.RegisterEnum("opencensus.proto.web.v1.Interaction_Span_SpanKind", Interaction_Span_SpanKind_name, Interaction_Span_SpanKind_value)
	proto.RegisterEnum("opencensus.proto.web.v1.Interaction_Span_MessageEvent_Type", Interaction_Span_MessageEvent_Type_name, Interaction_Span_MessageEvent_Type_value)
	proto.RegisterEnum("opencensus.proto.web.v1.Interaction_Span_Link_Type", Interaction_Span_Link_Type_name, Interaction_Span_Link_Type_value)
}

func init() {
	proto.RegisterFile("github.com/census-instrumentation/opencensus-proto/src/opencensus/proto/web/v1/web.proto", fileDescriptor_web_e7f6b64c714d62fd)
}

var fileDescriptor_web_e7f6b64c714d62fd = []byte{
	// 1669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0xef, 0x72, 0x1b, 0xb7,
	0x11, 0x2f, 0x29, 0xea, 0xdf, 0x92, 0x22, 0x29, 0xd8, 0x8a, 0xce, 0x8c, 0x63, 0xc9, 0x6e, 0x33,
	0x51, 0xd2, 0x86, 0x4a, 0xe4, 0xd4, 0x6d, 0xd3, 0x49, 0x5b, 0x89, 0xa2, 0x6b, 0x8e, 0x15, 0x85,
	0x73, 0x54, 0xd4, 0xb8, 0x33, 0x9d, 0x9b, 0xd3, 0x1d, 0x44, 0x63, 0x44, 0x02, 0x57, 0x00, 0x94,
	0xa3, 0x7c, 0xee, 0xf7, 0x4e, 0x1f, 0xa3, 0xef, 0xd4, 0x87, 0xe9, 0xec, 0x02, 0x24, 0x8f, 0x94,
	0x9c, 0xa1, 0xfd, 0xc5, 0x3e, 0xfc, 0xf6, 0xb7, 0x8b, 0xc5, 0xee, 0x62, 0x17, 0x14, 0xfc, 0xd0,
	0x17, 0xf6, 0xf5, 0xe8, 0xa2, 0x99, 0xa8, 0xe1, 0x7e, 0xc2, 0xa5, 0x19, 0x99, 0xcf, 0x85, 0x34,
	0x56, 0x8f, 0x86, 0x5c, 0xda, 0xd8, 0x0a, 0x25, 0xf7, 0x55, 0xc6, 0xa5, 0x17, 0x65, 0x5a, 0x59,
	0xb5, 0x6f, 0x74, 0x92, 0x03, 0xf7, 0x1d, 0xf8, 0x86, 0x5f, 0xec, 0x5f, 0x7f, 0x89, 0xff, 0x35,
	0x09, 0x60, 0xdb, 0x53, 0x8a, 0x43, 0x9a, 0x28, 0xbb, 0xfe, 0xb2, 0xf1, 0xa8, 0xaf, 0x54, 0x7f,
	0xc0, 0x9d, 0xde, 0xc5, 0xe8, 0x72, 0xff, 0x8d, 0x8e, 0xb3, 0x8c, 0x6b, 0x4f, 0x6b, 0x3c, 0x9c,
	0x97, 0xa3, 0x3b, 0x89, 0x75, 0xd2, 0x27, 0xff, 0xdd, 0x81, 0x72, 0x47, 0x5a, 0xae, 0xe3, 0x04,
	0xbd, 0x63, 0x0f, 0x60, 0xcd, 0xea, 0x38, 0xe1, 0x91, 0x48, 0x83, 0xc2, 0x6e, 0x61, 0x6f, 0x3d,
	0x5c, 0xa5, 0x75, 0x27, 0x65, 0x3b, 0x50, 0xb6, 0x62, 0xc8, 0x23, 0xa5, 0x45, 0x5f, 0xc8, 0xa0,
	0xb8, 0x5b, 0xd8, 0x2b, 0x84, 0x80, 0xd0, 0x77, 0x84, 0xb0, 0x2f, 0xe0, 0xbe, 0xe1, 0xfa, 0x9a,
	0xeb, 0x48, 0xf3, 0x7f, 0x8e, 0xb8, 0xb1, 0x91, 0xb1, 0xb1, 0xb6, 0xc1, 0x12, 0x31, 0x99, 0x93,
	0x85, 0x4e, 0xd4, 0x43, 0x09, 0x3b, 0x80, 0xad, 0x89, 0x86, 0xc9, 0x94, 0x34, 0xdc, 0xab, 0x94,
	0x48, 0xe5, 0xde, 0x58, 0xc5, 0xc9, 0x9c, 0xce, 0x25, 0xdc, 0xcb, 0xb8, 0xbe, 0x54, 0x7a, 0x18,
	0xcb, 0x84, 0x47, 0x5c, 0x5a, 0x2d, 0xb8, 0x09, 0x96, 0x77, 0x97, 0xf6, 0xca, 0x07, 0xbf, 0x6d,
	0xbe, 0x25, 0x4c, 0xcd, 0xdc, 0x21, 0x9b, 0xdd, 0xa9, 0x7e, 0x5b, 0x5a, 0x7d, 0x13, 0xb2, 0x6c,
	0x16, 0x11, 0xdc, 0xb0, 0x3f, 0xc3, 0xb2, 0xc9, 0x62, 0x69, 0x82, 0x15, 0xb2, 0xfc, 0xe9, 0x42,
	0x96, 0x7b, 0x59, 0x2c, 0x43, 0xa7, 0xc7, 0x7a, 0x50, 0x19, 0x88, 0x0b, 0x1d, 0xeb, 0x9b, 0x48,
	0xc8, 0x4b, 0x15, 0xac, 0xee, 0x16, 0xf6, 0xca, 0x07, 0x5f, 0x2c, 0x64, 0xe7, 0xc4, 0x29, 0x76,
	0xe4, 0xa5, 0x0a, 0xcb, 0x83, 0xe9, 0x02, 0x8d, 0x62, 0x50, 0x04, 0x66, 0x08, 0x8d, 0xae, 0xbd,
	0x83, 0xd1, 0x9e, 0x53, 0x74, 0x46, 0xcd, 0x74, 0xc1, 0xfa, 0xb0, 0x99, 0x0c, 0x04, 0x97, 0x36,
	0x8a, 0xad, 0xd5, 0xe2, 0x62, 0x64, 0xb9, 0x09, 0xd6, 0xe9, 0xd8, 0x5f, 0x2f, 0x64, 0xb9, 0x45,
	0xda, 0x87, 0x13, 0x65, 0x17, 0xd5, 0x7a, 0x32, 0x07, 0x37, 0xfe, 0x57, 0x86, 0xfa, 0x7c, 0xf0,
	0xd9, 0x47, 0x00, 0x98, 0xc4, 0x9b, 0xc8, 0xde, 0x64, 0xdc, 0x17, 0xdd, 0x3a, 0x21, 0x67, 0x37,
	0x19, 0x47, 0x31, 0xd5, 0x44, 0x84, 0x95, 0xe6, 0xab, 0x6e, 0x9d, 0x90, 0x33, 0x31, 0xe4, 0xac,
	0x01, 0x6b, 0xe9, 0x48, 0xd3, 0xd5, 0xf2, 0x85, 0x36, 0x59, 0x33, 0x06, 0x25, 0x19, 0x0f, 0x39,
	0x55, 0xd3, 0x7a, 0x48, 0xdf, 0x88, 0xd1, 0x3e, 0xcb, 0x0e, 0xc3, 0x6f, 0xf6, 0x31, 0x54, 0x85,
	0x14, 0x56, 0xc4, 0x56, 0x69, 0xe7, 0xc5, 0x0a, 0x49, 0x37, 0x26, 0x28, 0x79, 0xf2, 0x18, 0x2a,
	0x6f, 0x94, 0xbe, 0xe2, 0xda, 0x17, 0xe9, 0x2a, 0x6d, 0x57, 0x76, 0x98, 0x2b, 0xce, 0x8f, 0xa1,
	0xaa, 0x79, 0x2a, 0x34, 0x4f, 0xc6, 0xc5, 0xbf, 0x46, 0xa4, 0x8d, 0x31, 0x7a, 0x9b, 0x96, 0xa8,
	0x91, 0xb4, 0xc1, 0xfa, 0x6e, 0x61, 0x6f, 0x79, 0x4a, 0x6b, 0x21, 0x88, 0x1b, 0x4e, 0x68, 0x5c,
	0xa6, 0x01, 0xb8, 0x0d, 0xc7, 0x58, 0x5b, 0xd2, 0xa5, 0xbc, 0xe4, 0x36, 0x79, 0xed, 0x77, 0x2b,
	0xbb, 0x4b, 0x49, 0x90, 0xdb, 0xaa, 0x09, 0xf7, 0x52, 0x35, 0x8c, 0x85, 0x8c, 0x06, 0x4a, 0x5d,
	0x8d, 0x32, 0x4f, 0xac, 0x10, 0x71, 0xd3, 0x89, 0x4e, 0x48, 0xe2, 0xf8, 0x9f, 0xc1, 0xe6, 0x2c,
	0x1f, 0x37, 0xde, 0x20, 0x76, 0x2d, 0xcf, 0xc6, 0xcd, 0x7f, 0x09, 0x1b, 0x89, 0x92, 0x72, 0x7a,
	0xd8, 0x2a, 0xf1, 0x2a, 0x1e, 0x74, 0x06, 0x9f, 0xc1, 0xb6, 0xe1, 0xc9, 0x48, 0xf3, 0xc8, 0xc3,
	0x42, 0x49, 0x4f, 0xaf, 0x11, 0x7d, 0xcb, 0x89, 0x5b, 0x13, 0xa9, 0xd3, 0xdb, 0x81, 0xf2, 0xd8,
	0x38, 0xba, 0x50, 0x77, 0x27, 0xf3, 0x10, 0xee, 0xfe, 0x19, 0x6c, 0x4a, 0xfe, 0xa3, 0x8d, 0x5e,
	0xab, 0x2c, 0xa2, 0xca, 0x4c, 0xd4, 0x20, 0xd8, 0xa4, 0xc4, 0xd5, 0x50, 0xf0, 0x42, 0x65, 0x5d,
	0x0f, 0xa3, 0xa7, 0xb3, 0x3d, 0x89, 0x39, 0x4f, 0x75, 0xbe, 0x1b, 0x51, 0x56, 0x66, 0xda, 0xd0,
	0xbd, 0x71, 0xf2, 0xf2, 0x0d, 0x88, 0xb2, 0xe2, 0x69, 0xe8, 0xd9, 0xfd, 0x71, 0x56, 0x1c, 0xe6,
	0x03, 0x63, 0x75, 0x2c, 0xcd, 0x25, 0xd6, 0x8a, 0xf8, 0x89, 0x07, 0x5b, 0xbb, 0x85, 0xbd, 0xa5,
	0xb0, 0x32, 0x06, 0x7b, 0xe2, 0x27, 0x8e, 0xfe, 0x73, 0x99, 0xa8, 0x94, 0xa7, 0xd1, 0x85, 0x4a,
	0x6f, 0x1c, 0xf1, 0x03, 0x22, 0xd6, 0xbc, 0xe0, 0x48, 0xa5, 0x37, 0x63, 0x6e, 0xca, 0xe7, 0xb9,
	0xdb, 0x8e, 0xeb, 0x05, 0x13, 0xae, 0x86, 0x0d, 0xdf, 0x54, 0xad, 0x18, 0x0a, 0xd9, 0x0f, 0x02,
	0xba, 0xc9, 0xdf, 0xbe, 0x57, 0x6b, 0xcc, 0x03, 0x3d, 0xb2, 0x7a, 0x46, 0x46, 0xc3, 0x8a, 0xc9,
	0xad, 0xd8, 0x6f, 0x80, 0x8d, 0xe4, 0x40, 0xc5, 0x69, 0xc4, 0xaf, 0xb1, 0x8f, 0xb8, 0xf0, 0x3d,
	0xa0, 0xc8, 0xd4, 0x9d, 0xa4, 0x8d, 0x02, 0x17, 0xc1, 0x3d, 0xa8, 0xcf, 0xb0, 0x31, 0x8a, 0x0d,
	0xe2, 0x56, 0x73, 0x5c, 0x0c, 0xe4, 0x27, 0x80, 0x45, 0x17, 0x89, 0xb1, 0x87, 0xd7, 0x3c, 0xf8,
	0xd0, 0x11, 0x53, 0x35, 0xec, 0x4c, 0x51, 0x76, 0x04, 0x8f, 0x90, 0x98, 0x28, 0x69, 0xd1, 0x22,
	0x1a, 0xe1, 0xb3, 0xce, 0x3c, 0x24, 0xbd, 0x46, 0xaa, 0x86, 0x2d, 0x47, 0x3a, 0x21, 0x4e, 0xce,
	0xad, 0x3f, 0xc1, 0xc3, 0xb7, 0xda, 0x40, 0x17, 0x3f, 0x22, 0x0b, 0xc1, 0x9d, 0x16, 0xd0, 0xd9,
	0xc7, 0x50, 0x71, 0xfa, 0xc3, 0x6c, 0xc0, 0x2d, 0x0f, 0x1e, 0xb9, 0xc2, 0x20, 0xbe, 0x83, 0xd8,
	0xaf, 0xa0, 0x3a, 0x77, 0xee, 0x1d, 0x57, 0x88, 0x33, 0xa7, 0xde, 0x83, 0xfa, 0xad, 0x58, 0xee,
	0xba, 0x63, 0xcf, 0x45, 0x72, 0x07, 0xd0, 0x3c, 0xb9, 0x8a, 0x99, 0x7e, 0xec, 0x2e, 0x49, 0xaa,
	0x86, 0x27, 0x0e, 0x69, 0x5c, 0xc1, 0xf6, 0x5b, 0x32, 0x38, 0xe9, 0x8e, 0x85, 0x5c, 0x77, 0xdc,
	0x85, 0x72, 0xca, 0x4d, 0xa2, 0x45, 0x46, 0x0d, 0xb5, 0x48, 0xa2, 0x3c, 0xf4, 0x73, 0xfd, 0xb6,
	0xf1, 0x9f, 0x0d, 0x28, 0xe1, 0x04, 0x64, 0xdb, 0xb0, 0x8a, 0x33, 0x70, 0xfa, 0x88, 0x58, 0xc1,
	0x65, 0x27, 0x65, 0xaf, 0x00, 0xe8, 0x39, 0x61, 0x6c, 0x6c, 0xb1, 0x99, 0x63, 0x61, 0xfe, 0x61,
	0xe1, 0xc9, 0xda, 0x3c, 0x9b, 0xe8, 0xba, 0x09, 0x93, 0x33, 0x86, 0xa1, 0xcd, 0x62, 0x4d, 0x01,
	0xf3, 0x5b, 0x2f, 0xd1, 0xd6, 0x15, 0x87, 0xf6, 0x9c, 0x03, 0x77, 0x8d, 0x84, 0xe7, 0x50, 0xba,
	0x12, 0x32, 0xa5, 0x91, 0x50, 0x3d, 0x38, 0x58, 0xdc, 0x1d, 0xfc, 0xe7, 0xa5, 0x90, 0x69, 0x48,
	0xfa, 0xec, 0x3e, 0x2c, 0xbb, 0x5c, 0xad, 0x50, 0x5c, 0xdc, 0x82, 0xd5, 0x61, 0x09, 0xf3, 0xec,
	0x86, 0x05, 0x7e, 0xb2, 0xdf, 0x01, 0xe4, 0xe6, 0xac, 0x9b, 0xe0, 0xdb, 0x4d, 0xf7, 0x4c, 0x6b,
	0x8e, 0x9f, 0x69, 0xcd, 0x1e, 0x3d, 0xd3, 0xc2, 0x1c, 0x15, 0xb3, 0x6d, 0x6c, 0x9c, 0x5c, 0x45,
	0x74, 0x6c, 0x9a, 0x19, 0xeb, 0x21, 0x10, 0x44, 0x91, 0x61, 0xe7, 0x50, 0x8e, 0xa5, 0x54, 0xee,
	0xa5, 0x69, 0x02, 0xa0, 0xf8, 0x7e, 0xb5, 0xf8, 0x81, 0x0e, 0x27, 0xca, 0x61, 0xde, 0x10, 0xfb,
	0x07, 0x54, 0x87, 0xdc, 0x98, 0xb8, 0xcf, 0x5d, 0x4d, 0x9a, 0xa0, 0x4c, 0xa6, 0x9f, 0x2d, 0x6e,
	0xfa, 0x5b, 0xa7, 0x4f, 0xb5, 0x1b, 0x6e, 0x0c, 0x73, 0x2b, 0xc3, 0x8e, 0x61, 0x79, 0x20, 0xe4,
	0x95, 0x09, 0x2a, 0x64, 0xb5, 0xb9, 0xb8, 0xd5, 0x13, 0x21, 0xaf, 0x42, 0xa7, 0xcc, 0x5e, 0xc0,
	0x0a, 0x56, 0xc2, 0xc8, 0xd0, 0xb8, 0x5a, 0xf8, 0x51, 0x44, 0x89, 0x24, 0xbd, 0xd0, 0xeb, 0xb3,
	0x1f, 0xe0, 0x43, 0x13, 0x0f, 0x39, 0x4e, 0x95, 0x84, 0x1b, 0x13, 0xc5, 0x26, 0xca, 0x95, 0x16,
	0x4d, 0xb9, 0xf2, 0x41, 0xe3, 0x56, 0xc6, 0x8e, 0x94, 0x1a, 0x9c, 0xc7, 0x83, 0x11, 0x0f, 0xb7,
	0x51, 0xbd, 0xeb, 0xb4, 0x0f, 0x4d, 0x77, 0x52, 0x80, 0xec, 0x39, 0xd4, 0x93, 0xd7, 0x62, 0x90,
	0xba, 0x1a, 0x75, 0xa3, 0xbf, 0x46, 0xe6, 0x1e, 0xde, 0x32, 0xf7, 0x7d, 0x47, 0xda, 0xa7, 0x07,
	0xce, 0x60, 0x95, 0xb4, 0xd0, 0x04, 0xbd, 0x0c, 0x1a, 0xdf, 0x40, 0x6d, 0xee, 0x2e, 0x60, 0x9d,
	0x5d, 0xf1, 0x1b, 0x7f, 0xdf, 0xf0, 0x13, 0xeb, 0xf1, 0x1a, 0xb5, 0xfd, 0x35, 0x76, 0x8b, 0xaf,
	0x8b, 0xbf, 0x2f, 0x34, 0x5e, 0x01, 0x4c, 0x53, 0x4d, 0x4f, 0x22, 0xe1, 0x1b, 0x41, 0x21, 0xa4,
	0xef, 0xb9, 0x1a, 0x2d, 0x2e, 0x5c, 0xa3, 0x8d, 0x7f, 0x17, 0xa1, 0x92, 0xcf, 0xf5, 0x9d, 0xd6,
	0xbf, 0xf3, 0x8f, 0xb0, 0x22, 0xdd, 0xb8, 0x3f, 0xbe, 0x5f, 0x15, 0x35, 0xf1, 0x51, 0xe6, 0x5f,
	0x70, 0x55, 0x28, 0xfa, 0x0b, 0x5f, 0x0a, 0x8b, 0x22, 0x65, 0xbf, 0x86, 0xcd, 0x91, 0xc4, 0x46,
	0xac, 0xb9, 0x31, 0x3c, 0x75, 0xf3, 0xb2, 0x44, 0xe2, 0x7a, 0x5e, 0x40, 0x03, 0xf3, 0x13, 0xa8,
	0xcd, 0x53, 0x97, 0x89, 0x5a, 0x9d, 0x25, 0x3e, 0xf9, 0x0a, 0x4a, 0xf4, 0x10, 0xbc, 0x0f, 0xf5,
	0xb3, 0x57, 0xdd, 0x76, 0xf4, 0xfd, 0x69, 0xaf, 0xdb, 0x6e, 0x75, 0x9e, 0x77, 0xda, 0xc7, 0xf5,
	0x5f, 0xb0, 0x35, 0x28, 0xf5, 0xda, 0xa7, 0x67, 0xf5, 0x02, 0xab, 0xc0, 0x5a, 0xd8, 0x6e, 0xb5,
	0x3b, 0xe7, 0xed, 0xe3, 0x7a, 0xb1, 0xf1, 0xaf, 0x22, 0x94, 0xb0, 0x4e, 0x7f, 0xee, 0xb7, 0x55,
	0xae, 0x61, 0x16, 0x67, 0x1a, 0xe6, 0x5f, 0x7d, 0xa4, 0x96, 0x28, 0x52, 0x4f, 0xdf, 0xed, 0x66,
	0xe4, 0x23, 0x34, 0x9b, 0xd0, 0xd2, 0xc2, 0x09, 0x7d, 0xf2, 0xdc, 0x1f, 0xba, 0x06, 0xe5, 0xd9,
	0xf3, 0x6e, 0xc1, 0x66, 0xeb, 0x45, 0xe7, 0xe4, 0x38, 0x3a, 0xe9, 0x9c, 0xbe, 0x6c, 0x1f, 0x47,
	0xbd, 0xee, 0xe1, 0x69, 0xbd, 0xc0, 0x3e, 0x00, 0xd6, 0x3d, 0x0c, 0xdb, 0xa7, 0x67, 0x33, 0x78,
	0xb1, 0xf1, 0x0c, 0x56, 0xdc, 0x35, 0xc3, 0x8a, 0xc0, 0x17, 0x0b, 0xc5, 0x60, 0x39, 0xa4, 0x6f,
	0x16, 0xc0, 0xaa, 0xef, 0x09, 0x3e, 0x00, 0xe3, 0xe5, 0x93, 0x6f, 0x60, 0x6d, 0xdc, 0x67, 0xd9,
	0x03, 0xd8, 0x42, 0x6b, 0xd1, 0xcb, 0xce, 0xe9, 0xf1, 0x5c, 0xf4, 0x01, 0x56, 0x7a, 0xed, 0xf0,
	0xbc, 0x1d, 0xd6, 0x0b, 0xf8, 0xdd, 0x3a, 0xe9, 0x60, 0x2e, 0x8a, 0x8d, 0x18, 0xca, 0xb9, 0x1f,
	0x53, 0x98, 0xeb, 0xf1, 0x8f, 0xb2, 0x6b, 0xae, 0xcd, 0x74, 0xc8, 0x55, 0x3d, 0x7c, 0xee, 0x50,
	0xf6, 0x29, 0xd4, 0xf9, 0x8f, 0x99, 0xd2, 0x96, 0xeb, 0x09, 0xd3, 0x0d, 0x94, 0xda, 0x18, 0xf7,
	0xd4, 0xc6, 0x63, 0x28, 0xe7, 0x7e, 0x5a, 0xdd, 0x35, 0x57, 0x1b, 0x2d, 0xd8, 0xba, 0xf3, 0x37,
	0xd2, 0xbb, 0xdc, 0xda, 0xa3, 0x3e, 0x6c, 0x0b, 0x75, 0x67, 0x05, 0x1c, 0xad, 0xfd, 0x8d, 0x5f,
	0xd0, 0x63, 0xb7, 0x5b, 0xf8, 0xfb, 0x5f, 0xde, 0xe3, 0x6f, 0x10, 0x7d, 0x2e, 0x3f, 0xef, 0x8f,
	0xff, 0xea, 0x70, 0xb1, 0x42, 0xe0, 0xd3, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x99, 0xee, 0x53,
	0x3c, 0xce, 0x10, 0x00, 0x00,
}
